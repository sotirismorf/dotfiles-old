snippet main "main()"
int main(int argc, char * argv[]) {
	${VISUAL}${0}
	return 0;
}

endsnippet

snippet Inc "#include <...>"
#include <${1:stdio}.h>
endsnippet

snippet inc "#include"
#include "${1:Filename}.h"
endsnippet

snippet Def "#ifndef ... #define ... #endif"
#ifndef $1
#define ${1:SYMBOL} ${2:value}
#endif
endsnippet

snippet def "#define"
#define 
endsnippet

snippet ifdef "#ifdef"
#ifdef ${1}
${VISUAL}${0}
#endif /* $1 */
endsnippet

snippet #if "#if"
#if ${1}
${VISUAL}${0}
#endif /* $1 */
endsnippet

snippet if "If Condition"
if (${1}) {
	${VISUAL}${0:/* code */}
}
endsnippet

snippet el "Else"
else {
	${VISUAL}${0}
}
endsnippet

snippet t "Ternary conditional"
${1} ? ${2:/*true*/} : ${3:/*false*/}
endsnippet

snippet do "Do While Loop"
do {
	${VISUAL}${0}
} while (${1});
endsnippet
snippet wh "While Loop"
while (${1}) {
	${VISUAL}${0}
}
endsnippet
snippet for "For Loop"
for (int ${1:i}=0; $1<${2:10}; $1++) {
	${VISUAL}${0}
}
endsnippet
snippet fun "Function"
${1:void} ${2:function_name}(${3}) {
	${VISUAL}${0}
}
endsnippet
snippet fund "Function Declaration"
${1:void} ${2:function_name}(${3});
endsnippet
snippet td "Typedef"
typedef ${1:int} ${2:MyCustomType};
endsnippet

snippet st "Struct"
struct ${1:myStruct} {
	${0:/* data */}
}; 
endsnippet

snippet en "Enum"
enum ${1:name} {
	${2:/* data */}
}; /* enum $1 */
endsnippet

snippet pr "printf"
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet fpr "fprintf"
fprintf(${1:stderr}, "${2:%s}\n"${2/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$3${2/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet
