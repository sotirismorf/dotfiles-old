#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

status=/sys/class/power_supply/BAT?*/status
battery=/sys/class/power_supply/BAT1
capacity="$(cat "$battery/capacity" 2>&1)"
bstatus="$(cat "$battery/status" 2>&1)"

#case $BLOCK_BUTTON in
#	3) notify-send "🔋 Battery module" "🔋: discharging
#🛑: not charging
#♻: stagnant charge
#🔌: charging
#⚡: charged
#❗: battery very low!
#- Scroll to change adjust xbacklight." ;;
#	4) xbacklight -inc 10 ;;
#	5) xbacklight -dec 10 ;;
#	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
#esac
#
# Loop through all attached batteries and format the info
ICON=""
ICON_INDEX=$(($capacity/20))
case $ICON_INDEX in
	0) ICON="" ;;
	1) ICON="" ;;
	2) ICON="" ;;
	3) ICON="" ;;
	4) ICON="" ;;
	5) ICON="" ;;
	*) echo $ICON_INDEX;;
esac

for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf ""
	# Sets up the status and capacity
	case "$(cat "$battery/status" 2>&1)" in
		"Full") status="" ;;
		"Discharging") status="🔋" ;;
		"Charging") status="" ;;
		"Not charging") status="Battery not Charging" ;;
		"Unknown") status="♻️" ;;
		*) exit 1 ;;
	esac
	capacity="$(cat "$battery/capacity" 2>&1)"
	# Will make a warn variable if discharging and low
	[ "$status" = "🔋" ] && [ "$capacity" -le 25 ] && warn="❗"
	# Prints the info
	printf "%d%% %s%s%s" "$capacity" "$ICON" "$status" "$warn"; unset warn
done && printf "\\n"
